// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scale.proto

package scalepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UpdateRequest struct {
	Clustername          string   `protobuf:"bytes,1,opt,name=clustername,proto3" json:"clustername,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cafa45970e1cd6a, []int{0}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetClustername() string {
	if m != nil {
		return m.Clustername
	}
	return ""
}

func (m *UpdateRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type UpdateReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateReply) Reset()         { *m = UpdateReply{} }
func (m *UpdateReply) String() string { return proto.CompactTextString(m) }
func (*UpdateReply) ProtoMessage()    {}
func (*UpdateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cafa45970e1cd6a, []int{1}
}

func (m *UpdateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReply.Unmarshal(m, b)
}
func (m *UpdateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReply.Marshal(b, m, deterministic)
}
func (m *UpdateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReply.Merge(m, src)
}
func (m *UpdateReply) XXX_Size() int {
	return xxx_messageInfo_UpdateReply.Size(m)
}
func (m *UpdateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReply proto.InternalMessageInfo

func (m *UpdateReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ScaleRequest struct {
	Clustername          string   `protobuf:"bytes,1,opt,name=clustername,proto3" json:"clustername,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Hashrate             float32  `protobuf:"fixed32,3,opt,name=hashrate,proto3" json:"hashrate,omitempty"`
	Scaletype            string   `protobuf:"bytes,4,opt,name=scaletype,proto3" json:"scaletype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScaleRequest) Reset()         { *m = ScaleRequest{} }
func (m *ScaleRequest) String() string { return proto.CompactTextString(m) }
func (*ScaleRequest) ProtoMessage()    {}
func (*ScaleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cafa45970e1cd6a, []int{2}
}

func (m *ScaleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScaleRequest.Unmarshal(m, b)
}
func (m *ScaleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScaleRequest.Marshal(b, m, deterministic)
}
func (m *ScaleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScaleRequest.Merge(m, src)
}
func (m *ScaleRequest) XXX_Size() int {
	return xxx_messageInfo_ScaleRequest.Size(m)
}
func (m *ScaleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScaleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScaleRequest proto.InternalMessageInfo

func (m *ScaleRequest) GetClustername() string {
	if m != nil {
		return m.Clustername
	}
	return ""
}

func (m *ScaleRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ScaleRequest) GetHashrate() float32 {
	if m != nil {
		return m.Hashrate
	}
	return 0
}

func (m *ScaleRequest) GetScaletype() string {
	if m != nil {
		return m.Scaletype
	}
	return ""
}

type AutoScaleRequest struct {
	Clustername          string   `protobuf:"bytes,1,opt,name=clustername,proto3" json:"clustername,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Hashrate             float32  `protobuf:"fixed32,3,opt,name=hashrate,proto3" json:"hashrate,omitempty"`
	Curtime              int64    `protobuf:"varint,4,opt,name=curtime,proto3" json:"curtime,omitempty"`
	Autoscaler           int32    `protobuf:"varint,5,opt,name=autoscaler,proto3" json:"autoscaler,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AutoScaleRequest) Reset()         { *m = AutoScaleRequest{} }
func (m *AutoScaleRequest) String() string { return proto.CompactTextString(m) }
func (*AutoScaleRequest) ProtoMessage()    {}
func (*AutoScaleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cafa45970e1cd6a, []int{3}
}

func (m *AutoScaleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoScaleRequest.Unmarshal(m, b)
}
func (m *AutoScaleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoScaleRequest.Marshal(b, m, deterministic)
}
func (m *AutoScaleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoScaleRequest.Merge(m, src)
}
func (m *AutoScaleRequest) XXX_Size() int {
	return xxx_messageInfo_AutoScaleRequest.Size(m)
}
func (m *AutoScaleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoScaleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AutoScaleRequest proto.InternalMessageInfo

func (m *AutoScaleRequest) GetClustername() string {
	if m != nil {
		return m.Clustername
	}
	return ""
}

func (m *AutoScaleRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *AutoScaleRequest) GetHashrate() float32 {
	if m != nil {
		return m.Hashrate
	}
	return 0
}

func (m *AutoScaleRequest) GetCurtime() int64 {
	if m != nil {
		return m.Curtime
	}
	return 0
}

func (m *AutoScaleRequest) GetAutoscaler() int32 {
	if m != nil {
		return m.Autoscaler
	}
	return 0
}

func init() {
	proto.RegisterType((*UpdateRequest)(nil), "scalepb.UpdateRequest")
	proto.RegisterType((*UpdateReply)(nil), "scalepb.UpdateReply")
	proto.RegisterType((*ScaleRequest)(nil), "scalepb.ScaleRequest")
	proto.RegisterType((*AutoScaleRequest)(nil), "scalepb.AutoScaleRequest")
}

func init() { proto.RegisterFile("scale.proto", fileDescriptor_3cafa45970e1cd6a) }

var fileDescriptor_3cafa45970e1cd6a = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x52, 0xcd, 0x4a, 0xc4, 0x30,
	0x10, 0x36, 0xbb, 0xd6, 0xee, 0x4e, 0x15, 0x74, 0x50, 0x89, 0x8b, 0x48, 0xe9, 0xc5, 0x9e, 0x7a,
	0xd0, 0xab, 0x1e, 0x44, 0xf0, 0x2a, 0x44, 0x7c, 0x80, 0x6c, 0x1c, 0x58, 0xa1, 0x6b, 0x63, 0x7e,
	0x0e, 0x7d, 0x03, 0x1f, 0xc5, 0x87, 0xf1, 0xa1, 0xa4, 0xe9, 0x8f, 0x55, 0xd9, 0x9b, 0x78, 0x0a,
	0xdf, 0x97, 0x99, 0x2f, 0xdf, 0x7c, 0x13, 0x48, 0xac, 0x92, 0x25, 0x15, 0xda, 0x54, 0xae, 0xc2,
	0x38, 0x00, 0xbd, 0xcc, 0xee, 0x61, 0xef, 0x51, 0x3f, 0x49, 0x47, 0x82, 0x5e, 0x3d, 0x59, 0x87,
	0x29, 0x24, 0xaa, 0xf4, 0xd6, 0x91, 0x79, 0x91, 0x6b, 0xe2, 0x2c, 0x65, 0xf9, 0x5c, 0x8c, 0x29,
	0x3c, 0x85, 0x79, 0x73, 0x5a, 0x2d, 0x15, 0xf1, 0x49, 0xb8, 0xff, 0x22, 0xb2, 0x73, 0x48, 0x7a,
	0x41, 0x5d, 0xd6, 0xc8, 0x21, 0xb6, 0x5e, 0x29, 0xb2, 0x36, 0x48, 0xcd, 0x44, 0x0f, 0xb3, 0x37,
	0x06, 0xbb, 0x0f, 0x8d, 0x8b, 0x3f, 0x7a, 0x19, 0x17, 0x30, 0x5b, 0x49, 0xbb, 0x32, 0xd2, 0x11,
	0x9f, 0xa6, 0x2c, 0x9f, 0x88, 0x01, 0x37, 0x9d, 0x61, 0x62, 0x57, 0x6b, 0xe2, 0xdb, 0x6d, 0xe7,
	0x40, 0x64, 0xef, 0x0c, 0xf6, 0x6f, 0xbc, 0xab, 0xfe, 0xcd, 0x0e, 0x87, 0x58, 0x79, 0xe3, 0x9e,
	0xd7, 0xad, 0x99, 0xa9, 0xe8, 0x21, 0x9e, 0x01, 0x48, 0xef, 0xaa, 0xe0, 0xcd, 0xf0, 0x28, 0x65,
	0x79, 0x24, 0x46, 0xcc, 0xc5, 0x07, 0x83, 0x28, 0xd8, 0xc4, 0x2b, 0x80, 0x2e, 0x68, 0x5f, 0x12,
	0x1e, 0x17, 0xdd, 0x46, 0x8b, 0x6f, 0xeb, 0x5c, 0x1c, 0xfe, 0xe2, 0x75, 0x59, 0x67, 0x5b, 0x78,
	0xdd, 0x85, 0x7f, 0xdb, 0xce, 0x83, 0x47, 0x43, 0xdd, 0x38, 0x84, 0x8d, 0xed, 0x77, 0x70, 0x30,
	0x04, 0x66, 0x7a, 0x8d, 0x93, 0xa1, 0xf8, 0x67, 0x98, 0x9b, 0x74, 0x96, 0x3b, 0xe1, 0x3b, 0x5e,
	0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x96, 0x0b, 0xc5, 0x9d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScaleClient is the client API for Scale service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScaleClient interface {
	UpdateRule(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateReply, error)
	ScaleCluster(ctx context.Context, in *ScaleRequest, opts ...grpc.CallOption) (*UpdateReply, error)
	AutoScalerCluster(ctx context.Context, in *AutoScaleRequest, opts ...grpc.CallOption) (*UpdateReply, error)
}

type scaleClient struct {
	cc *grpc.ClientConn
}

func NewScaleClient(cc *grpc.ClientConn) ScaleClient {
	return &scaleClient{cc}
}

func (c *scaleClient) UpdateRule(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateReply, error) {
	out := new(UpdateReply)
	err := c.cc.Invoke(ctx, "/scalepb.Scale/UpdateRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scaleClient) ScaleCluster(ctx context.Context, in *ScaleRequest, opts ...grpc.CallOption) (*UpdateReply, error) {
	out := new(UpdateReply)
	err := c.cc.Invoke(ctx, "/scalepb.Scale/ScaleCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scaleClient) AutoScalerCluster(ctx context.Context, in *AutoScaleRequest, opts ...grpc.CallOption) (*UpdateReply, error) {
	out := new(UpdateReply)
	err := c.cc.Invoke(ctx, "/scalepb.Scale/AutoScalerCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScaleServer is the server API for Scale service.
type ScaleServer interface {
	UpdateRule(context.Context, *UpdateRequest) (*UpdateReply, error)
	ScaleCluster(context.Context, *ScaleRequest) (*UpdateReply, error)
	AutoScalerCluster(context.Context, *AutoScaleRequest) (*UpdateReply, error)
}

// UnimplementedScaleServer can be embedded to have forward compatible implementations.
type UnimplementedScaleServer struct {
}

func (*UnimplementedScaleServer) UpdateRule(ctx context.Context, req *UpdateRequest) (*UpdateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRule not implemented")
}
func (*UnimplementedScaleServer) ScaleCluster(ctx context.Context, req *ScaleRequest) (*UpdateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScaleCluster not implemented")
}
func (*UnimplementedScaleServer) AutoScalerCluster(ctx context.Context, req *AutoScaleRequest) (*UpdateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AutoScalerCluster not implemented")
}

func RegisterScaleServer(s *grpc.Server, srv ScaleServer) {
	s.RegisterService(&_Scale_serviceDesc, srv)
}

func _Scale_UpdateRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScaleServer).UpdateRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scalepb.Scale/UpdateRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScaleServer).UpdateRule(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scale_ScaleCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScaleServer).ScaleCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scalepb.Scale/ScaleCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScaleServer).ScaleCluster(ctx, req.(*ScaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scale_AutoScalerCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AutoScaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScaleServer).AutoScalerCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scalepb.Scale/AutoScalerCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScaleServer).AutoScalerCluster(ctx, req.(*AutoScaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scale_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scalepb.Scale",
	HandlerType: (*ScaleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateRule",
			Handler:    _Scale_UpdateRule_Handler,
		},
		{
			MethodName: "ScaleCluster",
			Handler:    _Scale_ScaleCluster_Handler,
		},
		{
			MethodName: "AutoScalerCluster",
			Handler:    _Scale_AutoScalerCluster_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scale.proto",
}
